{"version":3,"sources":["LandingPage/LandingPage.js","SentenceGeneratorForm/SentenceGeneratorForm.js","SentenceGeneratorPage/SentenceGeneratorPage.js","App/App.js","index.js"],"names":["LandingPage","react_default","a","createElement","className","react_router_dom","to","type","Component","SentenceGeneratorForm","props","otherProps","Object","objectWithoutProperties","assign","join","action","SentenceGeneratorPage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","e","preventDefault","options","method","fetch","then","response","json","data","locationadjective","Math","floor","random","length","word","setState","article","subjectadjective","subject","verb","preposition","location","adj","console","log","adjective","state","onSubmit","App","react_router","exact","path","component","ReactDOM","render","src_App_App","document","getElementById"],"mappings":"kTA8BiBA,0LAtBX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEbH,EAAAC,EAAAC,cAAA,mCAEAF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,yBAGAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,uBACLL,EAAAC,EAAAC,cAAA,UAAQI,KAAK,UAAb,yBAfEC,sBCHX,SAASC,EAAsBC,GAAO,IAC3CN,EAA6BM,EAA7BN,UAAcO,EAD6BC,OAAAC,EAAA,EAAAD,CACdF,EADc,eAEnD,OACET,EAAAC,EAAAC,cAAA,OAAAS,OAAAE,OAAA,CACEV,UAAW,CAAC,wBAAyBA,GAAWW,KAAK,KACrDC,OAAO,KACHL,cC+IOM,cA/Ib,SAAAA,EAAYP,GAAO,IAAAQ,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAAH,IACfC,EAAAN,OAAAS,EAAA,EAAAT,CAAAQ,KAAAR,OAAAU,EAAA,EAAAV,CAAAK,GAAAM,KAAAH,KAAMV,KAaVc,iBAAmB,SAAAC,GAEfA,EAAEC,iBAEF,IAUMC,EAAU,CACZC,OAAQ,OAGVC,MANgB,6DAMEF,GACjBG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACF,IACIC,EADSD,EAAKE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,SACnBC,KAE/BrB,EAAKsB,SAAS,CACVC,QAAS,MACTP,wBAIRL,MAnBgB,6DAmBEF,GACjBG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACF,IACIS,EADST,EAAKE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,SACpBC,KAE9BrB,EAAKsB,SAAS,CACVC,QAAS,MACTC,uBAINb,MArCW,6DAqCIF,GACdG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACF,IACIU,EADMV,EAAKE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,SAC7BC,KAElBrB,EAAKsB,SAAS,CACVC,QAAS,MACTE,cAIRd,MA9CY,0DA8CIF,GACfG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACF,IACIW,EADMX,EAAKE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,SAChCC,KAEfrB,EAAKsB,SAAS,CACVI,WAIRf,MAxDY,iEAwDGF,GACdG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACF,IACIY,EADOZ,EAAKE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,SACzBC,KAEvBrB,EAAKsB,SAAS,CACVK,kBAIRhB,MAlEW,8DAkEGF,GACbG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACF,IACIa,EADMb,EAAKE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,SAC5BC,KAEnBrB,EAAKsB,SAAS,CACVM,eAIRjB,MAhFW,yDAgFGF,GACbG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACF,IAAIc,EAAMd,EAAKE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,SAC/CU,QAAQC,IAAIF,GACZ,IAAIG,EAAYH,EAAIR,KAEpBrB,EAAKsB,SAAS,CACVU,iBA3GZhC,EAAKiC,MAAQ,CACXV,QAAS,GACTS,UAAW,GACZR,iBAAkB,GAClBR,kBAAmB,GAClBS,QAAS,GACTC,KAAM,GACNC,YAAa,GACbC,SAAU,IAVG5B,wEAmHjB,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aACdH,EAAAC,EAAAC,cAAA,+JAOJF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACM,EAAD,CAAuB2C,SAAUhC,KAAKI,kBAClCvB,EAAAC,EAAAC,cAAA,UAAQI,KAAK,UAAb,eAIAN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KACLL,EAAAC,EAAAC,cAAA,uBAIRF,EAAAC,EAAAC,cAAA,UAAKiB,KAAK+B,MAAMV,QAAhB,IAA0BrB,KAAK+B,MAAMT,iBAArC,IAAwDtB,KAAK+B,MAAMR,QAAnE,IAA6EvB,KAAK+B,MAAMP,KAAxF,IAA+FxB,KAAK+B,MAAMN,YAA1G,IAAwHzB,KAAK+B,MAAMV,QAAnI,IAA6IrB,KAAK+B,MAAMjB,kBAAxJ,IAA4Kd,KAAK+B,MAAML,SAAvL,cA1IoBtC,mBC6BrB6C,MA1Bf,WACE,OACEpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aACZH,EAAAC,EAAAC,cAAA,wBAIJF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,IACXC,UAAWzD,IAEdC,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACGC,OAAK,EAACC,KAAK,sBACXC,UAAWxC,aCnBrByC,IAASC,OACL1D,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACyD,EAAD,OAERC,SAASC,eAAe","file":"static/js/main.1ba0b896.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./LandingPage.css\"\n\nclass LandingPage extends Component {\n    render() {\n      return (\n        <div className='LandingPage'>\n          <header className='appHeader'>\n          <div className='image'>\n           </div>\n            <h2>A Writing Prompt App</h2>\n          </header>\n            <main> \n                <div className='logoImage'>\n                    writing-related image\n                </div>\n                <form className='entry-form'>\n                    <Link to=\"/sentence-generator\">\n                        <button type='submit'>Write now!</button> \n                    </Link>   \n                </form>\n            </main>\n       </div>\n      );\n    } \n  }\n  \n  export default LandingPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function SentenceGeneratorForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['SentenceGeneratorForm', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n\nSentenceGeneratorForm.propTypes = {\n};","import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport SentenceGeneratorForm from '../SentenceGeneratorForm/SentenceGeneratorForm';\nimport \"./SentenceGeneratorPage.css\"\n\nclass SentenceGeneratorPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          article: '',\n          adjective: [],\n         subjectadjective: [],\n         locationadjective: [],\n          subject: [],\n          verb: [],\n          preposition: [],\n          location: [],\n        };\n      }\n    \n    handleFormSubmit = e => {\n\n        e.preventDefault()\n    \n        const wordsAPI = 'https://calm-hamlet-15286.herokuapp.com/words?type=';\n        const subURL = 'https://calm-hamlet-15286.herokuapp.com/words?type=subject';\n        const artURL = 'https://calm-hamlet-15286.herokuapp.com/words?type=article';\n        const adjURL = 'https://calm-hamlet-15286.herokuapp.com/words?type=adj';\n        const verbURL = 'https://calm-hamlet-15286.herokuapp.com/words?type=verb';\n        const prepURL = 'https://calm-hamlet-15286.herokuapp.com/words?type=preposition';\n        const locURL = 'https://calm-hamlet-15286.herokuapp.com/words?type=location';\n        const subAdjURL = 'https://calm-hamlet-15286.herokuapp.com/words?type=sub-adj';\n        const locAdjURL = 'https://calm-hamlet-15286.herokuapp.com/words?type=loc-adj'\n\n        const options = {\n            method: 'GET',\n          }\n\n          fetch(locAdjURL,  options)\n          .then(response => response.json())\n          .then(data => {\n              let locadj = data[Math.floor(Math.random() * data.length)]\n              let locationadjective = locadj.word\n\n              this.setState({\n                  article: 'the',\n                  locationadjective\n              });\n          })  \n\n          fetch(subAdjURL,  options)\n          .then(response => response.json())\n          .then(data => {\n              let subadj = data[Math.floor(Math.random() * data.length)]\n              let subjectadjective = subadj.word\n\n              this.setState({\n                  article: 'the',\n                  subjectadjective\n              });\n          })  \n\n            fetch(subURL,  options)\n            .then(response => response.json())\n            .then(data => {\n                let sub = data[Math.floor(Math.random() * data.length)]\n                let subject = sub.word\n\n                this.setState({\n                    article: 'the',\n                    subject\n                });\n            })  \n\n            fetch(verbURL,  options)\n            .then(response => response.json())\n            .then(data => {\n                let ver = data[Math.floor(Math.random() * data.length)]\n                let verb = ver.word\n\n                this.setState({\n                    verb,\n                });\n            }) \n\n            fetch(prepURL, options)\n            .then(response => response.json())\n            .then(data => {\n                let prep = data[Math.floor(Math.random() * data.length)]\n                let preposition = prep.word\n\n                this.setState({\n                    preposition,\n                });\n            }) \n\n            fetch(locURL, options)\n            .then(response => response.json())\n            .then(data => {\n                let loc = data[Math.floor(Math.random() * data.length)]\n                let location = loc.word\n\n                this.setState({\n                    location,\n                });\n            }) \n\n            fetch(adjURL, options)\n            .then(response => response.json())\n            .then(data => {\n                let adj = data[Math.floor(Math.random() * data.length)]\n                console.log(adj)\n                let adjective = adj.word\n\n                this.setState({\n                    adjective,\n                });\n            }) \n    }\n\n    render() {\n      return (\n        <div className='SentenceGenerator'>\n            <header className='appHeader'>\n                <h3>\n                    Suffering from writer's block? \n                    Write Now is here to help! \n                    Click the button to get a randomly \n                    generated sentence you can use as a writing prompt.\n                </h3>\n            </header>\n            <main> \n                <SentenceGeneratorForm onSubmit={this.handleFormSubmit}>\n                    <button type='submit'>\n                        Write now!\n                    </button>   \n                </SentenceGeneratorForm>\n                    <Link to=\"/\">\n                        <button>\n                            Home\n                        </button>  \n                    </Link> \n                <h3>{this.state.article} {this.state.subjectadjective} {this.state.subject} {this.state.verb} {this.state.preposition} {this.state.article} {this.state.locationadjective} {this.state.location} </h3>  \n            </main>\n       </div>\n      );\n    } \n  }\n  \n  export default SentenceGeneratorPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Link } from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport LandingPage from '../LandingPage/LandingPage';\nimport SentenceGeneratorPage from '../SentenceGeneratorPage/SentenceGeneratorPage';\n// import SentenceResults from '../SentenceResults/SentenceResults';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className='appHeader'>\n            <h1>\n              Write Now\n            </h1>\n      </header>\n        <main>\n        <Route \n          exact path='/' \n          component={LandingPage} \n          />\n       <Route \n          exact path='/sentence-generator' \n          component={SentenceGeneratorPage} \n        /> \n        {/* <Route \n          exact path='/sentence-results' \n          component={SentenceResults} \n        />  */}\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App/App';\nimport './index.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\ndocument.getElementById('root')\n);"],"sourceRoot":""}